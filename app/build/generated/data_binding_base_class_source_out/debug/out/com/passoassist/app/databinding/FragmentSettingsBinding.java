// Generated by view binder compiler. Do not edit!
package com.passoassist.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.passoassist.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout advancedContainer;

  @NonNull
  public final Button btnBuildFromParts;

  @NonNull
  public final Button btnClearBaseUrl;

  @NonNull
  public final Button btnSaveBaseUrl;

  @NonNull
  public final Button btnSelectSound;

  @NonNull
  public final Button btnTestPrint;

  @NonNull
  public final CheckBox chkAdvanced;

  @NonNull
  public final TextInputEditText editBaseUrl;

  @NonNull
  public final TextInputEditText editDomain;

  @NonNull
  public final TextInputEditText editPaperWidth;

  @NonNull
  public final TextInputEditText editPollingInterval;

  @NonNull
  public final TextInputEditText editPort;

  @NonNull
  public final TextInputEditText editPrinterMac;

  @NonNull
  public final TextInputEditText editProtocol;

  @NonNull
  public final TextView settingsText;

  @NonNull
  public final SwitchCompat switchSound;

  @NonNull
  public final SwitchCompat switchVendorPrinter;

  @NonNull
  public final TextView txtSelectedSound;

  private FragmentSettingsBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout advancedContainer, @NonNull Button btnBuildFromParts,
      @NonNull Button btnClearBaseUrl, @NonNull Button btnSaveBaseUrl,
      @NonNull Button btnSelectSound, @NonNull Button btnTestPrint, @NonNull CheckBox chkAdvanced,
      @NonNull TextInputEditText editBaseUrl, @NonNull TextInputEditText editDomain,
      @NonNull TextInputEditText editPaperWidth, @NonNull TextInputEditText editPollingInterval,
      @NonNull TextInputEditText editPort, @NonNull TextInputEditText editPrinterMac,
      @NonNull TextInputEditText editProtocol, @NonNull TextView settingsText,
      @NonNull SwitchCompat switchSound, @NonNull SwitchCompat switchVendorPrinter,
      @NonNull TextView txtSelectedSound) {
    this.rootView = rootView;
    this.advancedContainer = advancedContainer;
    this.btnBuildFromParts = btnBuildFromParts;
    this.btnClearBaseUrl = btnClearBaseUrl;
    this.btnSaveBaseUrl = btnSaveBaseUrl;
    this.btnSelectSound = btnSelectSound;
    this.btnTestPrint = btnTestPrint;
    this.chkAdvanced = chkAdvanced;
    this.editBaseUrl = editBaseUrl;
    this.editDomain = editDomain;
    this.editPaperWidth = editPaperWidth;
    this.editPollingInterval = editPollingInterval;
    this.editPort = editPort;
    this.editPrinterMac = editPrinterMac;
    this.editProtocol = editProtocol;
    this.settingsText = settingsText;
    this.switchSound = switchSound;
    this.switchVendorPrinter = switchVendorPrinter;
    this.txtSelectedSound = txtSelectedSound;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.advanced_container;
      LinearLayout advancedContainer = ViewBindings.findChildViewById(rootView, id);
      if (advancedContainer == null) {
        break missingId;
      }

      id = R.id.btn_build_from_parts;
      Button btnBuildFromParts = ViewBindings.findChildViewById(rootView, id);
      if (btnBuildFromParts == null) {
        break missingId;
      }

      id = R.id.btn_clear_base_url;
      Button btnClearBaseUrl = ViewBindings.findChildViewById(rootView, id);
      if (btnClearBaseUrl == null) {
        break missingId;
      }

      id = R.id.btn_save_base_url;
      Button btnSaveBaseUrl = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveBaseUrl == null) {
        break missingId;
      }

      id = R.id.btn_select_sound;
      Button btnSelectSound = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectSound == null) {
        break missingId;
      }

      id = R.id.btn_test_print;
      Button btnTestPrint = ViewBindings.findChildViewById(rootView, id);
      if (btnTestPrint == null) {
        break missingId;
      }

      id = R.id.chk_advanced;
      CheckBox chkAdvanced = ViewBindings.findChildViewById(rootView, id);
      if (chkAdvanced == null) {
        break missingId;
      }

      id = R.id.edit_base_url;
      TextInputEditText editBaseUrl = ViewBindings.findChildViewById(rootView, id);
      if (editBaseUrl == null) {
        break missingId;
      }

      id = R.id.edit_domain;
      TextInputEditText editDomain = ViewBindings.findChildViewById(rootView, id);
      if (editDomain == null) {
        break missingId;
      }

      id = R.id.edit_paper_width;
      TextInputEditText editPaperWidth = ViewBindings.findChildViewById(rootView, id);
      if (editPaperWidth == null) {
        break missingId;
      }

      id = R.id.edit_polling_interval;
      TextInputEditText editPollingInterval = ViewBindings.findChildViewById(rootView, id);
      if (editPollingInterval == null) {
        break missingId;
      }

      id = R.id.edit_port;
      TextInputEditText editPort = ViewBindings.findChildViewById(rootView, id);
      if (editPort == null) {
        break missingId;
      }

      id = R.id.edit_printer_mac;
      TextInputEditText editPrinterMac = ViewBindings.findChildViewById(rootView, id);
      if (editPrinterMac == null) {
        break missingId;
      }

      id = R.id.edit_protocol;
      TextInputEditText editProtocol = ViewBindings.findChildViewById(rootView, id);
      if (editProtocol == null) {
        break missingId;
      }

      id = R.id.settings_text;
      TextView settingsText = ViewBindings.findChildViewById(rootView, id);
      if (settingsText == null) {
        break missingId;
      }

      id = R.id.switch_sound;
      SwitchCompat switchSound = ViewBindings.findChildViewById(rootView, id);
      if (switchSound == null) {
        break missingId;
      }

      id = R.id.switch_vendor_printer;
      SwitchCompat switchVendorPrinter = ViewBindings.findChildViewById(rootView, id);
      if (switchVendorPrinter == null) {
        break missingId;
      }

      id = R.id.txt_selected_sound;
      TextView txtSelectedSound = ViewBindings.findChildViewById(rootView, id);
      if (txtSelectedSound == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ScrollView) rootView, advancedContainer,
          btnBuildFromParts, btnClearBaseUrl, btnSaveBaseUrl, btnSelectSound, btnTestPrint,
          chkAdvanced, editBaseUrl, editDomain, editPaperWidth, editPollingInterval, editPort,
          editPrinterMac, editProtocol, settingsText, switchSound, switchVendorPrinter,
          txtSelectedSound);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
